version: '3.8'

services:
  # Основное приложение
  hello-world:
    build: .
    container_name: hello-world-app
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./audio:/app/audio
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/hello_world.db
      - AUDIO_ENABLED=true
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - hello-world-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hello-world.rule=Host(`localhost`)"
      - "traefik.http.services.hello-world.loadbalancer.server.port=5000"

  # Redis для кэширования и сессий
  redis:
    image: redis:7-alpine
    container_name: hello-world-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - hello-world-network
    command: redis-server --appendonly yes

  # Nginx для статических файлов и load balancing
  nginx:
    image: nginx:alpine
    container_name: hello-world-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - hello-world
    restart: unless-stopped
    networks:
      - hello-world-network

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: hello-world-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - hello-world-network

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  hello-world-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Дополнительные сервисы для development
  # Разкомментируйте для режима разработки
  # adminer:
  #   image: adminer
  #   container_name: hello-world-adminer
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - hello-world-network